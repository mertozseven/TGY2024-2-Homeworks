
import UIKit

//----------------------------------------------------------------------------------------------------------------------------------------------------------
/*
 1- Elimizde sadece harflerden oluşan (noktalama işareti veya sayılar yok) uzun stringler olsun. Bu stringler içinde bazı harflerin tekrar edeceğini düşünün. Mesela 'a' harfi 20 farklı yerde geçiyor olabilir. Bir fonksiyon ile verilen parametre değerine eşit ve daha fazla bulunan harfleri siliniz.Sonra geriye kalan stringi ekrana yazdırınız.
  
  Örnek string: "aaba kouq bux"
  Tekrar sayısı 2 verildiğinde : a,b,u silinmeli ve ekrana "koq x" yazılmalı
  Tekrar sayısı 3 verildiğinde : a silinmeli ve ekrana "b kouq bux"
  tekrar sayısı 4 verildiğinde : hiç bir harf silinmeyip aynı string yazılmalı
 */

func removeChars(input: String, count: Int) -> String {
    var charCount: [Character: Int] = [:]
    for char in input {
        charCount[char, default: 0] += 1
    }
    
    let filtered = input.filter { charCount[$0]! < count }
    return filtered
}

let exampleString = "aaba kouq bux"
print(removeChars(input: exampleString, count: 2))
print(removeChars(input: exampleString, count: 3))
print(removeChars(input: exampleString, count: 4))


//----------------------------------------------------------------------------------------------------------------------------------------------------------
/*
 2- Elimizde uzun bir cümle olsun. Bazı kelimelerin tekrar ettiği bir cümle düşünün. İstediğimiz ise, hangi kelimeden kaç tane kullanıldığını bulmak.
  String = "Merhaba nasılsınız iyiyim siz nasılsınız bende iyiyim"
  Merhaba 1 kere, nasılsınız 2 kere iyiyim 2 kere
 */

func countWordOccurrences(in sentence: String) -> [String: Int] {
    
    var seperators = CharacterSet()
    seperators.insert(charactersIn: " .,;:!?")
    let words = sentence.components(separatedBy: seperators)
    
    var wordCounts: [String: Int] = [:]

    for word in words {
        let cleanedWord = word.lowercased().trimmingCharacters(in: .punctuationCharacters)
        if !cleanedWord.isEmpty {
            wordCounts[cleanedWord, default: 0] += 1
        }
    }
    return wordCounts
}

let inputSentence = "Merhaba nasılsınız iyiyim siz nasılsınız bende iyiyim selam? Selam selam,.;    selam "
let wordOccurrences = countWordOccurrences(in: inputSentence)

for (word, count) in wordOccurrences {
    print("\(word): \(count) kere")
}


//----------------------------------------------------------------------------------------------------------------------------------------------------------


/*
 4- Euler project (https://projecteuler.net/archives) sayfasındaki ilk 3 soru swift kullanılarak çözülmeli
 */


/*
 1. soru Multiples of 3 or 5
 If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3,5,6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.
*/

let upperLimit = 10
var sum = 0

for number in 1..<upperLimit {
    if number % 3 == 0 || number % 5 == 0 {
        sum += number
    }
}

print("The sum of multiples of 3 or 5 below \(upperLimit) is: \(sum)")



/*
 2. soru Even Fibonacci Numbers
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1,2,3,5,8,13,21,34,55,89,...
 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

let upperLimit2 = 4_000_000
var sumOfEvenTerms = 0
var firstTerm = 1
var secondTerm = 2

while secondTerm <= upperLimit2 {
    
    if secondTerm % 2 == 0 {
        sumOfEvenTerms += secondTerm
    }
    
    let newTerm = firstTerm + secondTerm
    firstTerm = secondTerm
    secondTerm = newTerm
}

print("The sum of even Fibonacci terms below four million is: \(sumOfEvenTerms)")



/*
 3. soru Largest Prime Factor
 The prime factors of 13195 are 5, 7, 13 and 29.
 What is the largest prime factor of the number 600851475143?
*/

func largestPrimeFactor(of number: Int) -> Int {
    var n = number
    var largestFactor = 0
    
    while n % 2 == 0 {
        largestFactor = 2
        n /= 2
    }
    
    var factor = 3
    while factor * factor <= n {
        if n % factor == 0 {
            largestFactor = factor
            n /= factor
        } else {
            factor += 2
        }
    }
    
    if n > 2 {
        largestFactor = n
    }

    return largestFactor
}

let numberToFactor = 600_851_475_143
let result = largestPrimeFactor(of: numberToFactor)
print("The largest prime factor of \(numberToFactor) is \(result)")

